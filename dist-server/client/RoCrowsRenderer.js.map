{"version":3,"sources":["../../src/client/RoCrowsRenderer.js"],"names":["col_aviary","col_crow","col_robot","ctx","game","canvas","RoCrowsRenderer","gameEngine","clientEngine","document","createElement","width","window","innerWidth","devicePixelRatio","height","innerHeight","body","insertBefore","getElementById","w","h","zoom","spaceHeight","spaceWidth","getContext","lineWidth","strokeStyle","setTimeout","removeInstructions","bind","t","dt","clearRect","save","translate","scale","drawBounds","world","forEachObject","id","obj","Aviary","drawAviary","physicsObj","Robot","drawRobot","Crow","drawCrow","updateStatus","restore","playerShip","queryObject","playerId","lives","undefined","classList","remove","innerHTML","add","robot","size","shapes","armSize","armLength","grabberActive","fillStyle","position","rotate","angle","beginPath","moveTo","lineTo","closePath","stroke","fill","arc","aviaryRadius","Math","PI","crow","crowRadius","messageAngle","Renderer"],"mappings":"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","sourcesContent":["import { Renderer } from 'lance-gg';\r\nimport Aviary from '../common/Aviary';\r\nimport Crow from '../common/Crow';\r\nimport Robot from '../common/Robot';\r\n\r\nconst col_aviary = '#35F';\r\nconst col_crow = '#ABF';\r\nconst col_robot = '#A0A0A0';\r\n\r\nlet ctx = null;\r\nlet game = null;\r\nlet canvas = null;\r\n\r\nexport default class RoCrowsRenderer extends Renderer {\r\n\r\n    constructor(gameEngine, clientEngine) {\r\n        super(gameEngine, clientEngine);\r\n        game = gameEngine;\r\n\r\n        // Init canvas\r\n        canvas = document.createElement('canvas');\r\n        canvas.width = window.innerWidth * window.devicePixelRatio;\r\n        canvas.height = window.innerHeight * window.devicePixelRatio;\r\n        document.body.insertBefore(canvas, document.getElementById('logo'));\r\n        game.w = canvas.width;\r\n        game.h = canvas.height;\r\n        game.zoom = game.h / game.spaceHeight;\r\n        if (game.w / game.spaceWidth < game.zoom) game.zoom = game.w / game.spaceWidth;\r\n        ctx = canvas.getContext('2d');\r\n        ctx.lineWidth = 2 / game.zoom;\r\n        ctx.strokeStyle = 'black';\r\n\r\n        // remove instructions on first input\r\n        setTimeout(this.removeInstructions.bind(this), 5000);\r\n    }\r\n\r\n    draw(t, dt) {\r\n        super.draw(t, dt);\r\n\r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, game.w, game.h);\r\n\r\n        // Transform the canvas\r\n        // Note that we need to flip the y axis since Canvas pixel coordinates\r\n        // goes from top to bottom, while physics does the opposite.\r\n        ctx.save();\r\n        ctx.translate(game.w/2, game.h/2); // Translate to the center TODO: consider if this is best for RoCrows\r\n        ctx.scale(game.zoom, -game.zoom);  // Zoom in and flip y axis\r\n        /*\r\n         * Note that flipping the scale like this means all local rotations are also 'flipped'\r\n         * and must be entered as negative.\r\n         */\r\n\r\n        // Draw all things\r\n        this.drawBounds();\r\n        game.world.forEachObject((id, obj) => {\r\n            if (obj instanceof Aviary) this.drawAviary(obj.physicsObj);\r\n            else if (obj instanceof Robot) this.drawRobot(obj);\r\n            else if (obj instanceof Crow) this.drawCrow(obj);\r\n        });\r\n\r\n        // update status and restore\r\n        this.updateStatus();\r\n        ctx.restore();\r\n    }\r\n\r\n    updateStatus() {\r\n\r\n        let playerShip = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\r\n\r\n        if (!playerShip) {\r\n            if (this.lives !== undefined)\r\n                document.getElementById('gameover').classList.remove('hidden');\r\n            return;\r\n        }\r\n\r\n        // update lives if necessary\r\n        if (playerShip.playerId === this.gameEngine.playerId && this.lives !== playerShip.lives) {\r\n            document.getElementById('lives').innerHTML = 'Lives ' + playerShip.lives;\r\n            this.lives = playerShip.lives;\r\n        }\r\n    }\r\n\r\n    removeInstructions() {\r\n        document.getElementById('instructions').classList.add('hidden');\r\n        document.getElementById('instructionsMobile').classList.add('hidden');\r\n    }\r\n\r\n    drawRobot(robot) {\r\n        let body = robot.physicsObj;\r\n\r\n        let size = 0.5 * body.shapes[0].width; // width and height are the same; robot is square\r\n        let armSize = size * 0.4;\r\n        let armLength = robot.grabberActive ? size * 2 : armSize;\r\n        ctx.save();\r\n        ctx.fillStyle = col_robot;\r\n        ctx.translate(body.position[0], body.position[1]); // Translate to the robot center\r\n        ctx.rotate(-body.angle); // Rotate to robot orientation\r\n        \r\n        //left arm\r\n        ctx.beginPath();\r\n        ctx.moveTo(-size        , -armSize);\r\n        ctx.lineTo(-size-armSize, -armSize);\r\n        ctx.lineTo(-size-armSize,  armLength);\r\n        ctx.lineTo(-size        ,  armLength);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        \r\n        //right arm\r\n        ctx.beginPath();\r\n        ctx.moveTo( size        , -armSize);\r\n        ctx.lineTo( size+armSize, -armSize);\r\n        ctx.lineTo( size+armSize,  armLength);\r\n        ctx.lineTo( size        ,  armLength);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        \r\n        //body\r\n        ctx.beginPath();\r\n        ctx.moveTo(-size,-size);\r\n        ctx.lineTo(-size, size);\r\n        ctx.lineTo( size, size);\r\n        ctx.lineTo( size,-size);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n\r\n    }\r\n\r\n    drawAviary(body) {\r\n        ctx.save();\r\n        //ctx.translate(body.position[0], body.position[1]);  // Translate to the center\r\n        //ctx.rotate(-body.angle);\r\n        ctx.fillStyle = col_aviary;\r\n        ctx.beginPath();\r\n        ctx.arc(body.position[0], body.position[1], game.aviaryRadius, 0, 2*Math.PI);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    drawCrow(crow) {\r\n        let body = crow.physicsObj;\r\n        ctx.save();\r\n        ctx.translate(body.position[0], body.position[1]);  // Translate to the center\r\n\r\n        //crow\r\n        ctx.fillStyle = col_crow;\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, game.crowRadius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        \r\n        //direction indicator\r\n        if (crow.messageAngle || crow.messageAngle === 0) {\r\n            ctx.rotate(-crow.messageAngle);\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.beginPath();\r\n            ctx.moveTo(-game.crowRadius / 2, 0);\r\n            ctx.lineTo(0, game.crowRadius);\r\n            ctx.lineTo(game.crowRadius / 2, 0);\r\n            ctx.closePath();\r\n            //ctx.stroke();\r\n            ctx.fill();\r\n        }\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    drawBounds() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(-game.spaceWidth/2, -game.spaceHeight/2);\r\n        ctx.lineTo(-game.spaceWidth/2, game.spaceHeight/2);\r\n        ctx.lineTo( game.spaceWidth/2, game.spaceHeight/2);\r\n        ctx.lineTo( game.spaceWidth/2, -game.spaceHeight/2);\r\n        ctx.lineTo(-game.spaceWidth/2, -game.spaceHeight/2);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\n"],"file":"RoCrowsRenderer.js"}