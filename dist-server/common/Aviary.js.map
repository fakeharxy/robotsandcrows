{"version":3,"sources":["../../src/common/Aviary.js"],"names":["game","p2","Aviary","gameEngine","physicsEngine","physicsObj","Body","mass","damping","angularDamping","position","x","y","velocity","addShape","Circle","radius","aviaryRadius","collisionGroup","AVIARY","collisionMask","ROBOT","world","addBody","removeBody","other","PhysicalObject2D"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,IAAI,GAAG,IAAX;AACA,IAAIC,EAAE,GAAG,IAAT;;IAEqBC,M;;;;;;;;;;;;;;AAEjB;;;;;;;;AAQA;;;;;;;AAQA;mCACe;AACXF,MAAAA,IAAI,GAAG,KAAKG,UAAZ;AACAF,MAAAA,EAAE,GAAGD,IAAI,CAACI,aAAL,CAAmBH,EAAxB;AACA,WAAKI,UAAL,GAAkB,IAAIJ,EAAE,CAACK,IAAP,CAAY;AAC1BC,QAAAA,IAAI,EAAE,KAAKA,IADe;AACTC,QAAAA,OAAO,EAAE,CADA;AACGC,QAAAA,cAAc,EAAE,CADnB;AAE1BC,QAAAA,QAAQ,EAAE,CAAC,KAAKA,QAAL,CAAcC,CAAf,EAAkB,KAAKD,QAAL,CAAcE,CAAhC,CAFgB;AAG1BC,QAAAA,QAAQ,EAAE,CAAC,KAAKA,QAAL,CAAcF,CAAf,EAAkB,KAAKE,QAAL,CAAcD,CAAhC;AAHgB,OAAZ,CAAlB;AAKA,WAAKP,UAAL,CAAgBS,QAAhB,CAAyB,IAAIb,EAAE,CAACc,MAAP,CAAc;AACnCC,QAAAA,MAAM,EAAEhB,IAAI,CAACiB,YADsB;AAEnCC,QAAAA,cAAc,EAAElB,IAAI,CAACmB,MAFc;AAEN;AAC7BC,QAAAA,aAAa,EAAEpB,IAAI,CAACqB,KAHe,CAGT;;AAHS,OAAd,CAAzB;AAKArB,MAAAA,IAAI,CAACI,aAAL,CAAmBkB,KAAnB,CAAyBC,OAAzB,CAAiC,KAAKlB,UAAtC;AACH,K,CAED;;;;wCACoB;AAChBL,MAAAA,IAAI,CAACI,aAAL,CAAmBkB,KAAnB,CAAyBE,UAAzB,CAAoC,KAAKnB,UAAzC;AACH;;;2BAEMoB,K,EAAO;AACV,yEAAaA,KAAb;AACH;;;+BAEU;AACP;AACH;;;;EA9C+BC,yB","sourcesContent":["import { PhysicalObject2D, BaseTypes } from 'lance-gg';\r\n\r\nlet game = null;\r\nlet p2 = null;\r\n\r\nexport default class Aviary extends PhysicalObject2D {\r\n\r\n    /* no netScheme required\r\n    static get netScheme() {\r\n        return Object.assign({\r\n            level: { type: BaseTypes.TYPES.INT16 }\r\n        }, super.netScheme);\r\n    }\r\n    */\r\n\r\n    /* no movement so no bending required\r\n    // position bending: bend fully to server position in each sync [percent=1.0],\r\n    // unless the position difference is larger than 4.0 (i.e. wrap beyond bounds)\r\n    get bending() {\r\n        return { position: { max: 4.0 } };\r\n    }\r\n    */\r\n\r\n    // on add-to-world, create a physics body\r\n    onAddToWorld() {\r\n        game = this.gameEngine;\r\n        p2 = game.physicsEngine.p2;\r\n        this.physicsObj = new p2.Body({\r\n            mass: this.mass, damping: 0, angularDamping: 0,\r\n            position: [this.position.x, this.position.y],\r\n            velocity: [this.velocity.x, this.velocity.y]\r\n        });\r\n        this.physicsObj.addShape(new p2.Circle({\r\n            radius: game.aviaryRadius,\r\n            collisionGroup: game.AVIARY, // Belongs to the AVIARY group\r\n            collisionMask: game.ROBOT // Can collide with the ROBOT group only\r\n        }));\r\n        game.physicsEngine.world.addBody(this.physicsObj);\r\n    }\r\n\r\n    // on remove-from-world, remove the physics body\r\n    onRemoveFromWorld() {\r\n        game.physicsEngine.world.removeBody(this.physicsObj);\r\n    }\r\n\r\n    syncTo(other) {\r\n        super.syncTo(other);\r\n    }\r\n\r\n    toString() {\r\n        return `Aviary::${super.toString()}`;\r\n    }\r\n}\r\n"],"file":"Aviary.js"}