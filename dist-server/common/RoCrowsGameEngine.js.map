{"version":3,"sources":["../../src/common/RoCrowsGameEngine.js"],"names":["RoCrowsGameEngine","options","physicsEngine","P2PhysicsEngine","gameEngine","world","defaultContactMaterial","friction","on","warpAll","bind","steerCrows","Object","assign","spaceWidth","spaceHeight","aviaryRadius","crowRadius","robotSize","crowSpeed","robotSpeed","grabDuration","grabReach","grabTolerance","ROBOT","Math","pow","CROW","AVIARY","queryObjects","instanceType","Crow","forEach","crow","robot","queryObject","playerId","Robot","vecBearing","TwoVector","copy","position","subtract","scaleFactor","length","multiplyScalar","velocity","refreshToPhysics","forEachObject","id","obj","p","x","y","serializer","registerClass","Aviary","inputData","playerAviary","emit","input","random","rand","vx","vy","va","a","mass","angularVelocity","addObjectToWorld","playerAviaryBody","physicsObj","s","key","message","messageAngle","PI","angle","console","log","isGrabHolding","cancelGrab","isGrabSearching","setGrabSearching","timer","add","grabState","updateGrabbedObject","removeObjectFromWorld","force","setGrabInactive","object","isInGrabRange","setGrabHolding","body","grabVector","sin","cos","robot1","robot2","asteroid","bullet","asteroidBody","level","r","asteroidRadius","numAsteroidLevels","angleDisturb","i","subAsteroid","Asteroid","trace","info","toString","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, P2PhysicsEngine, TwoVector } from 'lance-gg';\r\nimport Aviary from './Aviary';\r\nimport Crow from './Crow';\r\nimport Robot from './Robot';\r\n\r\nexport default class RoCrowsGameEngine extends GameEngine {\r\n\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        // create physics with no friction; wrap positions after each step\r\n        this.physicsEngine = new P2PhysicsEngine({ gameEngine: this });\r\n        this.physicsEngine.world.defaultContactMaterial.friction = 0;\r\n        this.on('postStep', this.warpAll.bind(this));\r\n\r\n        //steer crows towards robots each step\r\n        this.on('postStep', this.steerCrows.bind(this));\r\n\r\n\r\n        // game variables\r\n        Object.assign(this, {\r\n            /*\r\n            lives: 3, shipSize: 0.3, shipTurnSpeed: 0.05, shipSpeed: 2, bulletRadius: 0.03, bulletLifeTime: 60,\r\n            asteroidRadius: 0.9, numAsteroidLevels: 4, numAsteroidVerts: 6, maxAsteroidSpeed: 2,\r\n            */\r\n            spaceWidth: 16, spaceHeight: 9, \r\n\r\n            aviaryRadius: 0.1,\r\n            crowRadius: 0.06,\r\n            robotSize: 0.2,\r\n\r\n            crowSpeed: 1.5,\r\n            robotSpeed: 0.5,\r\n\r\n            grabDuration: 120,\r\n            grabReach: 0.2,\r\n            grabTolerance: 0.05,\r\n\r\n            // collision groups\r\n            ROBOT: Math.pow(2, 1), CROW: Math.pow(2, 2), AVIARY: Math.pow(2, 3),\r\n        });\r\n    }\r\n\r\n    // steer the crows towards their players' robots\r\n    steerCrows() {\r\n        this.world.queryObjects({ instanceType: Crow }).forEach(crow => {\r\n            // find corresponding robot\r\n            let robot = this.world.queryObject({ playerId: crow.playerId, instanceType: Robot });\r\n            if (robot) {\r\n              // calculate crow vector based on target robot\r\n              let vecBearing = new TwoVector();\r\n              vecBearing.copy(robot.position);\r\n              vecBearing.subtract(crow.position);\r\n              let scaleFactor = this.crowSpeed / vecBearing.length();\r\n              vecBearing.multiplyScalar(scaleFactor);\r\n              crow.velocity = vecBearing;\r\n              crow.refreshToPhysics();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // If the body is out of space bounds, warp it to the other side\r\n    warpAll() {\r\n        this.world.forEachObject((id, obj) => {\r\n            let p = obj.position;\r\n            if(p.x > this.spaceWidth/2) p.x -= this.spaceWidth;\r\n            if(p.y > this.spaceHeight/2) p.y -= this.spaceHeight;\r\n            if(p.x < -this.spaceWidth /2) p.x += this.spaceWidth;\r\n            if(p.y < -this.spaceHeight/2) p.y += this.spaceHeight;\r\n            obj.refreshToPhysics();\r\n        });\r\n    }\r\n\r\n    registerClasses(serializer) {\r\n        serializer.registerClass(Robot);\r\n        serializer.registerClass(Aviary);\r\n        serializer.registerClass(Crow);\r\n    }\r\n\r\n    processInput(inputData, playerId) {\r\n\r\n        super.processInput(inputData, playerId);\r\n\r\n        // handle keyboard presses\r\n        // if immediate responses are required, they can be handled here but use extreme caution (or learn about shadow objects) if new objects will have to be created\r\n        let playerAviary = this.world.queryObject({ playerId: playerId, instanceType: Aviary });\r\n        if (playerAviary) {\r\n            this.emit('releaseCrow', playerAviary, inputData.input);\r\n        }\r\n    }\r\n\r\n    // returns a random number between -0.5 and 0.5\r\n    rand() {\r\n        return Math.random() - 0.5;\r\n    }\r\n\r\n    // create aviary\r\n    addAviary(playerId) {\r\n        let x = this.rand() * this.spaceWidth;\r\n        let y = this.rand() * this.spaceHeight;\r\n        let vx = 0;\r\n        let vy = 0;\r\n        let va = 0;\r\n        \r\n        let a = new Aviary(this, {}, {\r\n            playerId: playerId,\r\n            mass: 1000, angularVelocity: va,\r\n            position: new TwoVector(x, y),\r\n            velocity: new TwoVector(vx, vy)\r\n        });\r\n        this.addObjectToWorld(a);\r\n    }\r\n    \r\n    // create robot\r\n    addRobot(playerId) {\r\n        //find player's aviary and place robot nearby\r\n        let playerAviaryBody = this.world.queryObject({ playerId: playerId, instanceType: Aviary }).physicsObj;\r\n        let x = playerAviaryBody.position[0];\r\n        x += this.aviaryRadius * 3 * (x > 0 ? -1 : 1);\r\n        let y = playerAviaryBody.position[1];\r\n        //y += this.aviaryRadius * 3 * (y > 0 ? -1 : 1);\r\n        let vx = 0;\r\n        let vy = 0;\r\n\r\n        let s = new Robot(this, {}, {\r\n            playerId: playerId,\r\n            mass: 10, angularVelocity: 0,\r\n            position: new TwoVector(x, y), \r\n            velocity: new TwoVector(vx, vy)\r\n        });\r\n        //s.lives = this.lives;\r\n        this.addObjectToWorld(s);\r\n    }\r\n    \r\n    addCrow(playerAviary, key) {\r\n        //release a crow from the aviary\r\n        let vx = 0;\r\n        let vy = 0;\r\n\r\n        let crow = new Crow(this, {}, {\r\n            playerId: playerAviary.playerId,\r\n            mass: 0.0001, angularVelocity: 0,\r\n            position: playerAviary.position, //is copied anyway\r\n            velocity: new TwoVector(vx, vy)\r\n        });\r\n        crow.message = key;\r\n        if (crow.message === 'up') {\r\n            crow.messageAngle = 0;\r\n        } else if (crow.message === 'right') {\r\n            crow.messageAngle = Math.PI / 2;\r\n        } else if (crow.message === 'left') {\r\n            crow.messageAngle = -Math.PI / 2\r\n        } else if (crow.message === 'down') {\r\n            crow.messageAngle = Math.PI;\r\n        }\r\n        this.addObjectToWorld(crow);\r\n    }\r\n\r\n    // crow has arrived at a robot; can possibly deliver message\r\n    crowArrived(crow, robot) {\r\n        if (crow.playerId === robot.playerId) {\r\n            //console.log(\"crow delivered message \" + crow.message);\r\n            if (crow.message === 'up') {\r\n                robot.velocity = new TwoVector(0, this.robotSpeed);\r\n                robot.angle = crow.messageAngle;\r\n            } else if (crow.message === 'right') {\r\n                robot.velocity = new TwoVector(this.robotSpeed, 0);\r\n                robot.angle = crow.messageAngle;\r\n            } else if (crow.message === 'left') {\r\n                robot.velocity = new TwoVector(-this.robotSpeed, 0);\r\n                robot.angle = crow.messageAngle;\r\n            } else if (crow.message === 'down') {\r\n                robot.velocity = new TwoVector(0, -this.robotSpeed);\r\n                robot.angle = crow.messageAngle;\r\n\r\n            } else if (crow.message === 'space') {\r\n                console.log(\"grab message received by robot!\");\r\n                if (robot.isGrabHolding()) {\r\n                    //TODO: update the carried object - here or in cancelGrab?\r\n                    this.cancelGrab(robot, true);\r\n                } else if (!robot.isGrabSearching()) {\r\n                    robot.setGrabSearching();\r\n                    this.timer.add(this.grabDuration, this.cancelGrab, this, [robot.id, false]);\r\n                } else {\r\n                    console.log(\"robot ignored it, grabState is currently \" + robot.grabState);\r\n                }\r\n            }\r\n\r\n            robot.angularVelocity = 0;\r\n            robot.refreshToPhysics();\r\n            robot.updateGrabbedObject();\r\n            this.removeObjectFromWorld(crow.id);\r\n        } else {\r\n            console.log(\"crow flew over competitor robot\");\r\n        }\r\n    }\r\n\r\n    cancelGrab(robot, force) {\r\n        //the method can be called with Robot object or id\r\n        if (!(robot instanceof Robot)) {\r\n            console.log(\"looking up robot by id \" + robot);\r\n            robot = this.world.queryObject({ id: robot });\r\n        }\r\n        //this.emit('cancelGrab', robotId); // it does not seem necessary to emit this; not sure quite why yet\r\n        if (robot && robot instanceof Robot && (force || robot.isGrabSearching())) {\r\n            console.log(\"cancelling grab\");\r\n            robot.setGrabInactive();\r\n            //TODO drop any carried object?\r\n        }\r\n    }\r\n\r\n    // robot has collided with something - see if it can be grabbed\r\n    checkGrab(robot, object) {\r\n        if (robot.isGrabSearching()) {            \r\n            if (object instanceof Aviary) {\r\n                if (this.isInGrabRange(robot, object)) {\r\n                    console.log(\"aviary grabbed!\");\r\n                    robot.setGrabHolding(object);\r\n                }\r\n            }\r\n            // TODO also allow picking up other Robots\r\n        }\r\n    }\r\n\r\n    isInGrabRange(robot, object) {\r\n        let body = robot.physicsObj;\r\n        //calculate grab point\r\n        let grabVector = new TwoVector(body.position[0] + this.grabReach * Math.sin(body.angle), body.position[1] + this.grabReach * Math.cos(body.angle));\r\n\r\n        // calculate distance from grabpoint to object centre\r\n        grabVector.subtract(object.position);\r\n        if (grabVector.length() < this.grabTolerance) {\r\n            return true;\r\n        } else {\r\n            console.log(\"distance from grabpoint to object too big: \" + grabVector.length());\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // two robots have hit each other TODO dead stop? bounce? damage? grab?\r\n    robotCrash(robot1, robot2) {\r\n        console.log(\"robot crash!\");\r\n    }\r\n\r\n    // asteroid explosion\r\n    explode(asteroid, bullet) {\r\n\r\n        // Remove asteroid and bullet\r\n        let asteroidBody = asteroid.physicsObj;\r\n        let level = asteroid.level;\r\n        let x = asteroidBody.position[0];\r\n        let y = asteroidBody.position[1];\r\n        let r = this.asteroidRadius * (this.numAsteroidLevels - level) / this.numAsteroidLevels;\r\n        this.removeObjectFromWorld(asteroid);\r\n        this.removeObjectFromWorld(bullet);\r\n\r\n        // Add new sub-asteroids\r\n        if (level < 3) {\r\n            let angleDisturb = Math.PI/2 * Math.random();\r\n            for (let i=0; i<4; i++) {\r\n                let angle = Math.PI/2 * i + angleDisturb;\r\n                let subAsteroid = new Asteroid(this, {}, {\r\n                    mass: 10,\r\n                    position: new TwoVector(x + r * Math.cos(angle), y + r * Math.sin(angle)),\r\n                    velocity: new TwoVector(this.rand(), this.rand())\r\n                });\r\n                subAsteroid.level = level + 1;\r\n                this.trace.info(() => `creating sub-asteroid with radius ${r}: ${subAsteroid.toString()}`);\r\n                this.addObjectToWorld(subAsteroid);\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"file":"RoCrowsGameEngine.js"}