{"version":3,"sources":["../../src/server/RoCrowsServerEngine.js"],"names":["RoCrowsServerEngine","io","gameEngine","inputOptions","physicsEngine","world","on","handleCollision","bind","releaseCrow","evt","A","B","forEachObject","id","obj","physicsObj","bodyA","bodyB","trace","toString","Crow","Robot","crowArrived","Aviary","checkGrab","robotCrash","aviary","key","addCrow","socket","addAviary","playerId","addRobot","socketId","queryObjects","o","removeObjectFromWorld","player","radius","shapes","angle","Math","PI","bullet","mass","position","TwoVector","cos","sin","velocity","angularVelocity","addObjectToWorld","timer","add","bulletLifeTime","destroyBullet","bulletId","objects","ship","lives","ServerEngine"],"mappings":"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","sourcesContent":["import { ServerEngine, TwoVector } from 'lance-gg';\r\nimport Aviary from '../common/Aviary';\r\nimport Crow from '../common/Crow';\r\nimport Robot from '../common/Robot';\r\n\r\nexport default class RoCrowsServerEngine extends ServerEngine {\r\n\r\n    constructor(io, gameEngine, inputOptions) {\r\n        super(io, gameEngine, inputOptions);\r\n        gameEngine.physicsEngine.world.on('beginContact', this.handleCollision.bind(this));\r\n        gameEngine.on('releaseCrow', this.releaseCrow.bind(this));\r\n    }\r\n\r\n    start() {\r\n        super.start();\r\n        // aviaries replace asteroids, but they can only be created when a player joins\r\n        //this.gameEngine.addAsteroids();\r\n    }\r\n\r\n    // handle a collision on server only\r\n    handleCollision(evt) {\r\n\r\n        // identify the two objects which collided\r\n        let A;\r\n        let B;\r\n        this.gameEngine.world.forEachObject((id, obj) => {\r\n            if (obj.physicsObj === evt.bodyA) A = obj;\r\n            if (obj.physicsObj === evt.bodyB) B = obj;\r\n        });\r\n\r\n        // check bullet-asteroid and ship-asteroid collisions\r\n        if (!A || !B) return;\r\n        this.gameEngine.trace.trace(() => `collision between A=${A.toString()}`);\r\n        this.gameEngine.trace.trace(() => `collision and     B=${B.toString()}`);\r\n        \r\n        if (A instanceof Crow && B instanceof Robot) this.gameEngine.crowArrived(A, B);\r\n        if (B instanceof Crow && A instanceof Robot) this.gameEngine.crowArrived(B, A);\r\n\r\n        if (A instanceof Robot && B instanceof Aviary) this.gameEngine.checkGrab(A, B);\r\n        if (A instanceof Aviary && B instanceof Robot) this.gameEngine.checkGrab(B, A);\r\n        \r\n        if (B instanceof Robot && A instanceof Robot) this.gameEngine.robotCrash(A, B);\r\n        \r\n        //if (A instanceof Robot && B instanceof Asteroid) this.kill(A);\r\n        //if (B instanceof Robot && A instanceof Asteroid) this.kill(B);\r\n\r\n        // restart game\r\n        /*\r\n        if (this.gameEngine.world.queryObjects({ instanceType: Asteroid }).length === 0) this.gameEngine.addAsteroids();\r\n        */\r\n    }\r\n\r\n    releaseCrow(aviary, key) {\r\n        //console.log(\"player \" + aviary.playerId + \" pressed \" + key);\r\n        this.gameEngine.addCrow(aviary, key);\r\n    }\r\n\r\n    /* is this necessary ??\r\n    cancelGrab(robotId) {\r\n        console.log('cancelling grab for robot ' + robotId);\r\n        let robot = this.gameEngine.world.queryObject({ id: robotId });\r\n        if (robot && robot instanceof Robot) {\r\n            robot.\r\n        }\r\n    }\r\n    */\r\n\r\n    onPlayerConnected(socket) {\r\n        super.onPlayerConnected(socket);\r\n        this.gameEngine.addAviary(socket.playerId);\r\n        this.gameEngine.addRobot(socket.playerId);\r\n    }\r\n\r\n    onPlayerDisconnected(socketId, playerId) {\r\n        super.onPlayerDisconnected(socketId, playerId);\r\n        for (let o of this.gameEngine.world.queryObjects({ playerId }))\r\n            this.gameEngine.removeObjectFromWorld(o.id);\r\n    }\r\n        \r\n\r\n\r\n    /**\r\n     *  from here onwards is old asteroids code \r\n     */\r\n        \r\n    // shooting creates a bullet\r\n    shoot(player) {\r\n\r\n        let radius = player.physicsObj.shapes[0].radius;\r\n        let angle = player.physicsObj.angle + Math.PI / 2;\r\n        let bullet = new Crow(this.gameEngine, {}, {\r\n            mass: 0.05,\r\n            position: new TwoVector(\r\n                radius * Math.cos(angle) + player.physicsObj.position[0],\r\n                radius * Math.sin(angle) + player.physicsObj.position[1]\r\n            ),\r\n            velocity: new TwoVector(\r\n                2 * Math.cos(angle) + player.physicsObj.velocity[0],\r\n                2 * Math.sin(angle) + player.physicsObj.velocity[1]\r\n            ),\r\n            angularVelocity: 0\r\n        });\r\n        let obj = this.gameEngine.addObjectToWorld(bullet);\r\n        this.gameEngine.timer.add(this.gameEngine.bulletLifeTime, this.destroyBullet, this, [obj.id]);\r\n    }\r\n\r\n    // destroy the missile if it still exists\r\n    destroyBullet(bulletId) {\r\n        if (this.gameEngine.world.objects[bulletId]) {\r\n            this.gameEngine.trace.trace(() => `bullet[${bulletId}] destroyed`);\r\n            this.gameEngine.removeObjectFromWorld(bulletId);\r\n        }\r\n    }\r\n\r\n    kill(ship) {\r\n        if(ship.lives-- === 0) this.gameEngine.removeObjectFromWorld(ship.id);\r\n    }\r\n\r\n}\r\n"],"file":"RoCrowsServerEngine.js"}